package com.lichangxin.threadsafety;

public class Ordering {
    public static void main(String[] args) {
        /*
        * 有序是指在什么情况下一个处理器上所执行的 内存访问操作在另一个处理器运行的其他线程来看是乱序的
        * 乱序是指内存访问操作的顺序看起来发生了变化
        * 在多核处理器的环境下，编写的顺序结构，这种操作执行的顺序可能是没有保障的
        * 编译器可能会改变两个操作的先后顺序
        * 处理器可能不会安装目标代码的顺序执行
        * 重排序是内存访问有序操作的一种优化，可以在不影响单线程程序正确的情况下提升程序的性能，但是
        * 可能对多线程程序的正确性产生影响，可能导致线程安全问题
        *
        * 源代码顺序 就是指源代码中指定的内存访问顺序
        * 程序顺序 处理器上运行的目标代码所指定的内存访问顺序
        * 执行顺序 内存访问操作在处理器上的实际执行顺序
        * 感知顺序 给定处理器所感知到的该处理器以及其他处理器的内存访问操作顺序
        * */
    }
}
